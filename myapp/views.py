from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from django.contrib.auth.forms import UserCreationForm
from django.contrib import messages 
from django.contrib.auth.models import User
from django.contrib.auth import authenticate, login




# ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á Django
def login_view(request):
    return render(request, 'myapp/login.html')


def login_view(request):
    error = None
    if request.method == 'POST':
        username = request.POST['username']
        password = request.POST['password']
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)  # ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            return redirect('home')  # üëâ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        else:
            error = '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
    return render(request, 'login.html', {'error': error})

def register(request):
    return render(request, 'myapp/register.html')

# ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ
@login_required(login_url='login')
def home(request):
    return render(request, 'myapp/home.html')

def menu(request):
    return render(request, 'myapp/menu.html')

def delivery(request):
    return render(request, 'myapp/delivery.html')

def trackorder(request):
    return render(request, 'myapp/trackorder.html')

def register_view(request):
    if request.method == 'POST':
        form = UserCreationForm(request.POST, request.FILES)  # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå (‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå) ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏î‡πâ‡∏ß‡∏¢
        if form.is_valid():
            form.save()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÉ‡∏´‡∏°‡πà
            # ‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
            return redirect('login')  # ‡∏ä‡∏∑‡πà‡∏≠ url ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô
    else:
        form = UserCreationForm()
    return render(request, 'register.html', {'form': form})

def register(request):
    if request.method == "POST":
        username = request.POST['username']
        password1 = request.POST['password1']
        password2 = request.POST['password2']

        if password1 == password2:
            try:
                User.objects.create_user(username=username, password=password1)
                messages.success(request, "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
                return redirect('login')  # ‡∏ä‡∏∑‡πà‡∏≠ URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
            except:
                messages.error(request, "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß")
        else:
            messages.error(request, "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
    return render(request, 'register.html')

from django.urls import reverse

def register(request):
    error = None

    if request.method == 'POST':
        username = request.POST.get('username')
        password1 = request.POST.get('password1')
        password2 = request.POST.get('password2')

        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
        if not username or not password1 or not password2:
            error = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö"
        elif password1 != password2:
            error = "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô"
        elif User.objects.filter(username=username).exists():
            error = "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß"
        else:
            # ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            User.objects.create_user(username=username, password=password1)

            # üëâ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏ó‡∏µ‡πà "login"
            return redirect(reverse('login'))  # ‡∏´‡∏£‡∏∑‡∏≠ redirect('login') ‡∏ñ‡πâ‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ url ‡∏ñ‡∏π‡∏Å‡πÅ‡∏•‡πâ‡∏ß

    return render(request, 'register.html', {'error': error})

def order_view(request):
    user = request.user
    # ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠ query ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á user
    order_items = get_order_items_for_user(user)  # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    
    total_price = sum(item.price * item.quantity for item in order_items)

    context = {
        'customer_name': user.get_full_name() or user.username,  # ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á ‡∏´‡∏£‡∏∑‡∏≠ username ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
        'order_items': order_items,
        'total_price': total_price,
    }
    return render(request, 'order.html', context)

@login_required
def track_order(request):
    user = request.user
    # ‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á user ‡∏ó‡∏µ‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 'delivering'
    order = user.order_set.filter(status='delivering').order_by('-created_at').first()

    context = {
        'customer_name': user.get_full_name() or user.username,
        'order': order,
    }
    return render(request, 'track_order.html', context)

def order_status(request):
    customer_name = "‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏°‡∏û‡∏π‡πà"

    order_items = [
        {
            'name': '‡∏°‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏á‡∏£‡∏™‡∏™‡∏ï‡∏£‡∏≠‡∏ß‡πå‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà',
            'quantity': 2,
            'price': 60,
            'image_url': 'https://i.imgur.com/1.png',
        },
        {
            'name': '‡∏ä‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏°‡∏±‡∏ó‡∏â‡∏∞‡πÄ‡∏¢‡πá‡∏ô',
            'quantity': 1,
            'price': 55,
            'image_url': 'https://i.imgur.com/2.png',
        },
        {
            'name': '‡∏û‡∏∏‡∏î‡∏î‡∏¥‡πâ‡∏á‡∏ä‡∏≤‡∏ô‡∏°‡πÑ‡∏Ç‡πà‡∏°‡∏∏‡∏Å',
            'quantity': 1,
            'price': 45,
            'image_url': 'https://i.imgur.com/3.png',
        },
    ]

    total_price = sum(item['quantity'] * item['price'] for item in order_items)

    return render(request, 'myapp/order_status.html', {
        'customer_name': customer_name,
        'order_items': order_items,
        'total_price': total_price,
    })
    
    from django.contrib.auth.decorators import login_required
